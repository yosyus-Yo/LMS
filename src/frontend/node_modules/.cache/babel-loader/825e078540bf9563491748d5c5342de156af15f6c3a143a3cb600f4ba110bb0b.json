{"ast":null,"code":"import React,{useEffect}from'react';import{useRoutes}from'react-router-dom';import{useAppDispatch,useAppSelector}from'./app/store';import{getUserProfile}from'./features/auth/authSlice';import createRoutes from'./routes';import Chatbot from'./features/chatbot/Chatbot';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const dispatch=useAppDispatch();const{isAuthenticated,user}=useAppSelector(state=>state.auth);// 사용자 정보 로드\nuseEffect(()=>{if(isAuthenticated){dispatch(getUserProfile());}},[isAuthenticated,dispatch]);// 라우트 생성\nconst routes=createRoutes(isAuthenticated,(user===null||user===void 0?void 0:user.role)||'');const element=useRoutes(routes);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[element,isAuthenticated&&/*#__PURE__*/_jsx(Chatbot,{})]});};export default App;","map":{"version":3,"names":["React","useEffect","useRoutes","useAppDispatch","useAppSelector","getUserProfile","createRoutes","Chatbot","jsx","_jsx","jsxs","_jsxs","App","dispatch","isAuthenticated","user","state","auth","routes","role","element","className","children"],"sources":["/Users/seohun/Documents/LMS (1)/src/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from './app/store';\nimport { getUserProfile } from './features/auth/authSlice';\nimport createRoutes from './routes';\nimport Chatbot from './features/chatbot/Chatbot';\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { isAuthenticated, user } = useAppSelector((state) => state.auth);\n  \n  // 사용자 정보 로드\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getUserProfile());\n    }\n  }, [isAuthenticated, dispatch]);\n  \n  // 라우트 생성\n  const routes = createRoutes(isAuthenticated, user?.role || '');\n  const element = useRoutes(routes);\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {element}\n      {isAuthenticated && <Chatbot />}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,cAAc,CAAEC,cAAc,KAAQ,aAAa,CAC5D,OAASC,cAAc,KAAQ,2BAA2B,CAC1D,MAAO,CAAAC,YAAY,KAAM,UAAU,CACnC,MAAO,CAAAC,OAAO,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,QAAQ,CAAGV,cAAc,CAAC,CAAC,CACjC,KAAM,CAAEW,eAAe,CAAEC,IAAK,CAAC,CAAGX,cAAc,CAAEY,KAAK,EAAKA,KAAK,CAACC,IAAI,CAAC,CAEvE;AACAhB,SAAS,CAAC,IAAM,CACd,GAAIa,eAAe,CAAE,CACnBD,QAAQ,CAACR,cAAc,CAAC,CAAC,CAAC,CAC5B,CACF,CAAC,CAAE,CAACS,eAAe,CAAED,QAAQ,CAAC,CAAC,CAE/B;AACA,KAAM,CAAAK,MAAM,CAAGZ,YAAY,CAACQ,eAAe,CAAE,CAAAC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEI,IAAI,GAAI,EAAE,CAAC,CAC9D,KAAM,CAAAC,OAAO,CAAGlB,SAAS,CAACgB,MAAM,CAAC,CAEjC,mBACEP,KAAA,QAAKU,SAAS,CAAC,yBAAyB,CAAAC,QAAA,EACrCF,OAAO,CACPN,eAAe,eAAIL,IAAA,CAACF,OAAO,GAAE,CAAC,EAC5B,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}