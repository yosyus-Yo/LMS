{"ast":null,"code":"var _jsxFileName = \"/home/cafe99/my_first_work/projects/LMS/src/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from './app/store';\nimport { getUserProfile } from './features/auth/authSlice';\nimport createRoutes from './routes';\nimport Chatbot from './features/chatbot/Chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    isAuthenticated,\n    user\n  } = useAppSelector(state => state.auth);\n\n  // 사용자 정보 로드\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getUserProfile());\n    }\n  }, [isAuthenticated, dispatch]);\n\n  // 라우트 생성\n  const routes = createRoutes(isAuthenticated, (user === null || user === void 0 ? void 0 : user.role) || '');\n  const element = useRoutes(routes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [element, isAuthenticated && /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PtahbDb2rjRVkKEga8phe8ag0nQ=\", false, function () {\n  return [useAppDispatch, useAppSelector, useRoutes];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRoutes","useAppDispatch","useAppSelector","getUserProfile","createRoutes","Chatbot","jsxDEV","_jsxDEV","App","_s","dispatch","isAuthenticated","user","state","auth","routes","role","element","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cafe99/my_first_work/projects/LMS/src/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from './app/store';\nimport { getUserProfile } from './features/auth/authSlice';\nimport createRoutes from './routes';\nimport Chatbot from './features/chatbot/Chatbot';\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { isAuthenticated, user } = useAppSelector((state) => state.auth);\n  \n  // 사용자 정보 로드\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getUserProfile());\n    }\n  }, [isAuthenticated, dispatch]);\n  \n  // 라우트 생성\n  const routes = createRoutes(isAuthenticated, user?.role || '');\n  const element = useRoutes(routes);\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {element}\n      {isAuthenticated && <Chatbot />}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAC5D,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,YAAY,MAAM,UAAU;AACnC,OAAOC,OAAO,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;EACjC,MAAM;IAAEU,eAAe;IAAEC;EAAK,CAAC,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;;EAEvE;EACAf,SAAS,CAAC,MAAM;IACd,IAAIY,eAAe,EAAE;MACnBD,QAAQ,CAACP,cAAc,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACQ,eAAe,EAAED,QAAQ,CAAC,CAAC;;EAE/B;EACA,MAAMK,MAAM,GAAGX,YAAY,CAACO,eAAe,EAAE,CAAAC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,IAAI,KAAI,EAAE,CAAC;EAC9D,MAAMC,OAAO,GAAGjB,SAAS,CAACe,MAAM,CAAC;EAEjC,oBACER,OAAA;IAAKW,SAAS,EAAC,yBAAyB;IAAAC,QAAA,GACrCF,OAAO,EACPN,eAAe,iBAAIJ,OAAA,CAACF,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAACd,EAAA,CArBID,GAAa;EAAA,QACAP,cAAc,EACGC,cAAc,EAWhCF,SAAS;AAAA;AAAAwB,EAAA,GAbrBhB,GAAa;AAuBnB,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}