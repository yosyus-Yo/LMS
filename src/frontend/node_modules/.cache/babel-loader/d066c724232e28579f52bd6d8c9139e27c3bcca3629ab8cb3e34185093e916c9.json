{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux 슬라이스 (추후 개별 파일로 분리)\nimport authReducer from '../features/auth/authSlice';\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer\n    // 향후 추가될 reducer들:\n    // courses: coursesReducer,\n    // user: userReducer,\n    // learning: learningReducer,\n    // admin: adminReducer,\n    // chatbot: chatbotReducer,\n  },\n  // 미들웨어 설정 (필요시)\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      // 직렬화 불가능한 값 무시 설정 (필요시)\n      ignoredActions: [],\n      ignoredActionPaths: [],\n      ignoredPaths: []\n    }\n  })\n});\n\n// 타입스크립트를 위한 타입 정의\n\n// 훅 정의 - 컴포넌트에서 사용하기 위함\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["configureStore","useDispatch","useSelector","authReducer","store","reducer","auth","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredActionPaths","ignoredPaths","useAppDispatch","_s","useAppSelector"],"sources":["/Users/seohun/Documents/LMS (1)/src/frontend/src/app/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\n// Redux 슬라이스 (추후 개별 파일로 분리)\nimport authReducer from '../features/auth/authSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    // 향후 추가될 reducer들:\n    // courses: coursesReducer,\n    // user: userReducer,\n    // learning: learningReducer,\n    // admin: adminReducer,\n    // chatbot: chatbotReducer,\n  },\n  // 미들웨어 설정 (필요시)\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // 직렬화 불가능한 값 무시 설정 (필요시)\n        ignoredActions: [],\n        ignoredActionPaths: [],\n        ignoredPaths: [],\n      },\n    }),\n});\n\n// 타입스크립트를 위한 타입 정의\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\n// 훅 정의 - 컴포넌트에서 사용하기 위함\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;;AAE5E;AACA,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACPC,IAAI,EAAEH;IACN;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;EACD;EACAI,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjB;MACAC,cAAc,EAAE,EAAE;MAClBC,kBAAkB,EAAE,EAAE;MACtBC,YAAY,EAAE;IAChB;EACF,CAAC;AACL,CAAC,CAAC;;AAEF;;AAIA;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMb,WAAW,CAAc,CAAC;AAAA;AAACa,EAAA,CAAlDD,cAAc;EAAA,QAASZ,WAAW;AAAA;AAC/C,OAAO,MAAMc,cAA+C,GAAGb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}