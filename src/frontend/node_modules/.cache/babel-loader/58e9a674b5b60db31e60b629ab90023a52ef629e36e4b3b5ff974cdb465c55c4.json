{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{useDispatch,useSelector}from'react-redux';// Redux 슬라이스 (추후 개별 파일로 분리)\nimport authReducer from'../features/auth/authSlice';export const store=configureStore({reducer:{auth:authReducer// 향후 추가될 reducer들:\n// courses: coursesReducer,\n// user: userReducer,\n// learning: learningReducer,\n// admin: adminReducer,\n// chatbot: chatbotReducer,\n},// 미들웨어 설정 (필요시)\nmiddleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{// 직렬화 불가능한 값 무시 설정 (필요시)\nignoredActions:[],ignoredActionPaths:[],ignoredPaths:[]}})});// 타입스크립트를 위한 타입 정의\n// 훅 정의 - 컴포넌트에서 사용하기 위함\nexport const useAppDispatch=()=>useDispatch();export const useAppSelector=useSelector;","map":{"version":3,"names":["configureStore","useDispatch","useSelector","authReducer","store","reducer","auth","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredActionPaths","ignoredPaths","useAppDispatch","useAppSelector"],"sources":["/Users/seohun/Documents/LMS (1)/src/frontend/src/app/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\n// Redux 슬라이스 (추후 개별 파일로 분리)\nimport authReducer from '../features/auth/authSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    // 향후 추가될 reducer들:\n    // courses: coursesReducer,\n    // user: userReducer,\n    // learning: learningReducer,\n    // admin: adminReducer,\n    // chatbot: chatbotReducer,\n  },\n  // 미들웨어 설정 (필요시)\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // 직렬화 불가능한 값 무시 설정 (필요시)\n        ignoredActions: [],\n        ignoredActionPaths: [],\n        ignoredPaths: [],\n      },\n    }),\n});\n\n// 타입스크립트를 위한 타입 정의\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\n// 훅 정의 - 컴포넌트에서 사용하기 위함\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAA+BC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAE5E;AACA,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CAEpD,MAAO,MAAM,CAAAC,KAAK,CAAGJ,cAAc,CAAC,CAClCK,OAAO,CAAE,CACPC,IAAI,CAAEH,WACN;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CACD;AACAI,UAAU,CAAGC,oBAAoB,EAC/BA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjB;AACAC,cAAc,CAAE,EAAE,CAClBC,kBAAkB,CAAE,EAAE,CACtBC,YAAY,CAAE,EAChB,CACF,CAAC,CACL,CAAC,CAAC,CAEF;AAIA;AACA,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAMZ,WAAW,CAAc,CAAC,CAC9D,MAAO,MAAM,CAAAa,cAA+C,CAAGZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}