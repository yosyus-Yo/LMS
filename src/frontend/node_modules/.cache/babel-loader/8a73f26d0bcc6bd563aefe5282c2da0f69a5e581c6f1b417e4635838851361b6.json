{"ast":null,"code":"var _jsxFileName = \"/home/cafe99/my_first_work/projects/LMS/src/frontend/src/routes.tsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// 인증 관련\nimport Login from './features/auth/Login';\nimport Register from './features/auth/Register';\n\n// 대시보드\nimport Dashboard from './features/dashboard/Dashboard';\n\n// 강의 관련\nimport CourseList from './features/courses/CourseList';\nimport CourseDetail from './features/courses/CourseDetail';\n\n// 임시 컴포넌트 (추후 실제 구현으로 대체)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Profile Page\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 23\n}, this);\n_c = Profile;\nconst AdminDashboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Admin Dashboard Page\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 30\n}, this);\n_c2 = AdminDashboard;\nconst InstructorCourses = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Instructor Courses Page\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 33\n}, this);\n_c3 = InstructorCourses;\nconst NotFound = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"404 - Page Not Found\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 24\n}, this);\n\n// 인증 보호 라우트 헬퍼 함수\n_c4 = NotFound;\nconst ProtectedRoute = ({\n  element,\n  isAuthenticated,\n  redirectPath = '/login',\n  requiredRole,\n  userRole\n}) => {\n  // 인증되지 않은 경우\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 역할 확인이 필요한 경우\n  if (requiredRole && userRole !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: element\n  }, void 0, false);\n};\n\n// 라우트 설정 함수\n_c5 = ProtectedRoute;\nexport const createRoutes = (isAuthenticated, userRole) => {\n  return [\n  // 공개 라우트\n  {\n    path: '/login',\n    element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 73\n    }, this)\n  }, {\n    path: '/register',\n    element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 73\n    }, this)\n  },\n  // 보호된 라우트\n  {\n    path: '/dashboard',\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this),\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: '/courses',\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      element: /*#__PURE__*/_jsxDEV(CourseList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this),\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: '/courses/:courseId',\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      element: /*#__PURE__*/_jsxDEV(CourseDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this),\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: '/profile',\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }, this),\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  },\n  // 강사 전용 라우트\n  {\n    path: '/my-courses',\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      element: /*#__PURE__*/_jsxDEV(InstructorCourses, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this),\n      isAuthenticated: isAuthenticated,\n      requiredRole: \"instructor\",\n      userRole: userRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  },\n  // 관리자 전용 라우트\n  {\n    path: '/admin',\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 20\n      }, this),\n      isAuthenticated: isAuthenticated,\n      requiredRole: \"admin\",\n      userRole: userRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  },\n  // 리디렉션\n  {\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(Navigate, {\n      to: isAuthenticated ? '/dashboard' : '/login',\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 16\n    }, this)\n  },\n  // 찾을 수 없는 페이지\n  {\n    path: '*',\n    element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 16\n    }, this)\n  }];\n};\nexport default createRoutes;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"AdminDashboard\");\n$RefreshReg$(_c3, \"InstructorCourses\");\n$RefreshReg$(_c4, \"NotFound\");\n$RefreshReg$(_c5, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Login","Register","Dashboard","CourseList","CourseDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AdminDashboard","_c2","InstructorCourses","_c3","NotFound","_c4","ProtectedRoute","element","isAuthenticated","redirectPath","requiredRole","userRole","to","replace","_c5","createRoutes","path","$RefreshReg$"],"sources":["/home/cafe99/my_first_work/projects/LMS/src/frontend/src/routes.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, RouteObject } from 'react-router-dom';\n\n// 인증 관련\nimport Login from './features/auth/Login';\nimport Register from './features/auth/Register';\n\n// 대시보드\nimport Dashboard from './features/dashboard/Dashboard';\n\n// 강의 관련\nimport CourseList from './features/courses/CourseList';\nimport CourseDetail from './features/courses/CourseDetail';\n\n// 임시 컴포넌트 (추후 실제 구현으로 대체)\nconst Profile = () => <div>Profile Page</div>;\nconst AdminDashboard = () => <div>Admin Dashboard Page</div>;\nconst InstructorCourses = () => <div>Instructor Courses Page</div>;\nconst NotFound = () => <div>404 - Page Not Found</div>;\n\n// 인증 보호 라우트 헬퍼 함수\ninterface ProtectedRouteProps {\n  element: React.ReactNode;\n  isAuthenticated: boolean;\n  redirectPath?: string;\n  requiredRole?: string;\n  userRole?: string;\n}\n\nconst ProtectedRoute = ({\n  element,\n  isAuthenticated,\n  redirectPath = '/login',\n  requiredRole,\n  userRole,\n}: ProtectedRouteProps) => {\n  // 인증되지 않은 경우\n  if (!isAuthenticated) {\n    return <Navigate to={redirectPath} replace />;\n  }\n\n  // 역할 확인이 필요한 경우\n  if (requiredRole && userRole !== requiredRole) {\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  return <>{element}</>;\n};\n\n// 라우트 설정 함수\nexport const createRoutes = (isAuthenticated: boolean, userRole: string): RouteObject[] => {\n  return [\n    // 공개 라우트\n    {\n      path: '/login',\n      element: isAuthenticated ? <Navigate to=\"/dashboard\" replace /> : <Login />,\n    },\n    {\n      path: '/register',\n      element: isAuthenticated ? <Navigate to=\"/dashboard\" replace /> : <Register />,\n    },\n\n    // 보호된 라우트\n    {\n      path: '/dashboard',\n      element: (\n        <ProtectedRoute\n          element={<Dashboard />}\n          isAuthenticated={isAuthenticated}\n        />\n      ),\n    },\n    {\n      path: '/courses',\n      element: (\n        <ProtectedRoute\n          element={<CourseList />}\n          isAuthenticated={isAuthenticated}\n        />\n      ),\n    },\n    {\n      path: '/courses/:courseId',\n      element: (\n        <ProtectedRoute\n          element={<CourseDetail />}\n          isAuthenticated={isAuthenticated}\n        />\n      ),\n    },\n    {\n      path: '/profile',\n      element: (\n        <ProtectedRoute\n          element={<Profile />}\n          isAuthenticated={isAuthenticated}\n        />\n      ),\n    },\n\n    // 강사 전용 라우트\n    {\n      path: '/my-courses',\n      element: (\n        <ProtectedRoute\n          element={<InstructorCourses />}\n          isAuthenticated={isAuthenticated}\n          requiredRole=\"instructor\"\n          userRole={userRole}\n        />\n      ),\n    },\n\n    // 관리자 전용 라우트\n    {\n      path: '/admin',\n      element: (\n        <ProtectedRoute\n          element={<AdminDashboard />}\n          isAuthenticated={isAuthenticated}\n          requiredRole=\"admin\"\n          userRole={userRole}\n        />\n      ),\n    },\n\n    // 리디렉션\n    {\n      path: '/',\n      element: <Navigate to={isAuthenticated ? '/dashboard' : '/login'} replace />,\n    },\n\n    // 찾을 수 없는 페이지\n    {\n      path: '*',\n      element: <NotFound />,\n    },\n  ];\n};\n\nexport default createRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}